Manual Inject 
$ kubectl label namespace <test> istio-injection=enabled 
$ kubectl get namespace -L istio-injection=enabled 


EKS
curl http://localhost:61679/v1/enis | python -m json.tool

Kubectl install
---------------
curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
chmod +x kubectl 
mv kubectl /usr/bin/
kubectl version
.bashrc
echo "export KUBECONFIG=$KUBECONFIG:~/.kube/kubeconfig" >> .bashrc 
echo "alias k='kubectl'" >> .bashrc 
mkdir -p .kube && touch .kube/kubeconfig
-----------------------------------------------
curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
chmod +x aws-iam-authenticator 
mv aws-iam-authenticator /usr/bin/
aws-iam-authenticator


kubeconfig
apiVersion: v1
clusters:
- cluster:
    server: 
    certificate-authority-data:
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: aws
  name: aws
current-context: aws
kind: Config
preferences: {}
users:
- name: aws
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1alpha1
      command: aws-iam-authenticator
      args:
        - "token"
        - "-i"
        - "gr-eks-cluster-EAST"
        
kubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true

ENI-file

apiVersion: crd.k8s.amazonaws.com/v1alpha1
kind: ENIConfig
metadata: 
  name: us-west-2
spec: 
  securityGroups: 
    - sg-0aea6f2a6ddd10ca2
  subnet: subnet-0ef820a7a943a1e55
  
  
  Cluster security group 
  sg-0e9ec14e273b02680
  
  kubectl annotate node ip-10-0-0-61.us-east-2.compute.internal  k8s.amazonaws.com/eniConfig=subnet-a
  
  kubectl annotate node ip-10-0-0-110.us-east-2.compute.internal k8s.amazonaws.com/eniConfig=us-east-2a


WEST 

VPC -
IG - igw-06bc6d0c2db71ae3f
g-eks-west, vpc-046c27c10ae43119e, 
Subnets
1. g-west-1`, subnet-093d1056871f3b50f, us-west-2a, 20.0.3.0/24 
2. g-west-2 , subnet-00a57dd5dfbc021aa, us-west-2b, 20.0.4.0/24

  
  




